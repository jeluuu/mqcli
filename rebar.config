{minimum_otp_vsn, "21.0"}.

{erl_opts, [
  {parse_transform, lager_transform},
  debug_info,
  warn_export_all,
  warn_unused_import
]}.

{deps, [
  {jsx, "2.10.0"},
  {lager, "3.6.2"},
  {amqp_client, "3.8.4"}
  % {ensq,  {git, "git@github.com:project-fifo/ensq.git", {tag, "0.3.0"}}}
]}.


%%====================================================================
% XRef
%%====================================================================

{xref_checks, [
  undefined_function_calls,
  undefined_functions,
  locals_not_used,
  exports_not_used,
  deprecated_function_calls,
  deprecated_functions
]}.

{eunit_opts, [verbose, {report,{eunit_surefire,[{dir,"."}]}}]}.

{validate_app_modules, true}.

%%{shell, [
%%  % {config, "config/sys.config"},
%%    {apps, [mqcli]}
%%]}.

%%====================================================================
% Releases
%%====================================================================
{relx, [
  {release, {mqcli, "0.1.0" }, [mqcli, sasl]},
  {sys_config, "./config/sys.config"},
  {vm_args, "./config/vm.args"},
  {dev_mode, false},
  {include_erts, false},
  {extended_start_script, true}
]}.


{escript_name, mqcli}.
{escript_main_app, mqcli}.
%%{escript_emu_args, "%%! -smp true +K true +A 16 +P 200000 -env ERL_MAX_PORTS 100000 -env ERTS_MAX_PORTS 100000\n"}.
{escript_shebang, "#!/usr/bin/env escript\n"}.
{provider_hooks, [{post, [{compile, escriptize}]}]}.
{post_hooks, [{"(linux|darwin|solaris|freebsd|netbsd|openbsd)",
  escriptize,
  "cp $PWD/_build/default/bin/mqcli ./mqcli"},
  {"win32",
    escriptize,
    "robocopy \"%REBAR_BUILD_DIR%/bin/\" ./ mqcli* "
    "/njs /njh /nfl /ndl & exit /b 0"} % silence things
]}.
